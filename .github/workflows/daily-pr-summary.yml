name: Daily PR Summary
on:
  pull_request:
    types: [opened]           # Test trigger - runs when PR is opened
  workflow_dispatch:          # Allow manual testing

jobs:
  pr-summary:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    steps:
      - name: Get Open PRs
        id: get-prs
        uses: actions/github-script@v7
        with:
          script: |
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              sort: 'created',
              direction: 'desc'
            });
            
            if (prs.length === 0) {
              core.setOutput('message', 'ðŸŽ‰ No open pull requests!');
              return;
            }
            
            let message = `ðŸ“‹ *${prs.length} Open Pull Request${prs.length > 1 ? 's' : ''}*\n\n`;
            
            for (const pr of prs) {
              const daysSinceCreated = Math.floor((Date.now() - new Date(pr.created_at)) / (1000 * 60 * 60 * 24));
              const ageText = daysSinceCreated === 0 ? 'today' : 
                             daysSinceCreated === 1 ? '1 day ago' : 
                             `${daysSinceCreated} days ago`;
            
              const reviewRequests = pr.requested_reviewers?.map(r => r.login).join(', ') || 'None';
            
              message += `â€¢ <${pr.html_url}|${pr.title}>\n`;
              message += `  ðŸ‘¤ ${pr.user.login} â€¢ ðŸ“… ${ageText} â€¢ ðŸ‘€ ${reviewRequests}\n\n`;
            }
            
            core.setOutput('message', message);

      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "Daily PR Summary",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ steps.get-prs.outputs.message }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}